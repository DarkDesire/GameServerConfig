// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package protobuf.model.packets



@SerialVersionUID(0L)
final case class PacketPreviewAvatars(
    avatars: _root_.scala.collection.Seq[protobuf.model.packets.PacketPreviewAvatar] = _root_.scala.collection.Seq.empty,
    createdAvatars: Int = 0,
    availableAvatars: Int = 0,
    maxAvatars: Int = 0
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[PacketPreviewAvatars] with com.trueaccord.lenses.Updatable[PacketPreviewAvatars] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      avatars.foreach(avatars => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(avatars.serializedSize) + avatars.serializedSize)
      if (createdAvatars != 0) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, createdAvatars) }
      if (availableAvatars != 0) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, availableAvatars) }
      if (maxAvatars != 0) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, maxAvatars) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      avatars.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      {
        val __v = createdAvatars
        if (__v != 0) {
          _output__.writeInt32(2, __v)
        }
      };
      {
        val __v = availableAvatars
        if (__v != 0) {
          _output__.writeInt32(3, __v)
        }
      };
      {
        val __v = maxAvatars
        if (__v != 0) {
          _output__.writeInt32(4, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): protobuf.model.packets.PacketPreviewAvatars = {
      val __avatars = (_root_.scala.collection.immutable.Vector.newBuilder[protobuf.model.packets.PacketPreviewAvatar] ++= this.avatars)
      var __createdAvatars = this.createdAvatars
      var __availableAvatars = this.availableAvatars
      var __maxAvatars = this.maxAvatars
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __avatars += _root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, protobuf.model.packets.PacketPreviewAvatar.defaultInstance)
          case 16 =>
            __createdAvatars = _input__.readInt32()
          case 24 =>
            __availableAvatars = _input__.readInt32()
          case 32 =>
            __maxAvatars = _input__.readInt32()
          case tag => _input__.skipField(tag)
        }
      }
      protobuf.model.packets.PacketPreviewAvatars(
          avatars = __avatars.result(),
          createdAvatars = __createdAvatars,
          availableAvatars = __availableAvatars,
          maxAvatars = __maxAvatars
      )
    }
    def clearAvatars = copy(avatars = _root_.scala.collection.Seq.empty)
    def addAvatars(__vs: protobuf.model.packets.PacketPreviewAvatar*): PacketPreviewAvatars = addAllAvatars(__vs)
    def addAllAvatars(__vs: TraversableOnce[protobuf.model.packets.PacketPreviewAvatar]): PacketPreviewAvatars = copy(avatars = avatars ++ __vs)
    def withAvatars(__v: _root_.scala.collection.Seq[protobuf.model.packets.PacketPreviewAvatar]): PacketPreviewAvatars = copy(avatars = __v)
    def withCreatedAvatars(__v: Int): PacketPreviewAvatars = copy(createdAvatars = __v)
    def withAvailableAvatars(__v: Int): PacketPreviewAvatars = copy(availableAvatars = __v)
    def withMaxAvatars(__v: Int): PacketPreviewAvatars = copy(maxAvatars = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => avatars
        case 2 => {
          val __t = createdAvatars
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = availableAvatars
          if (__t != 0) __t else null
        }
        case 4 => {
          val __t = maxAvatars
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(avatars.map(_.toPMessage)(_root_.scala.collection.breakOut))
        case 2 => _root_.scalapb.descriptors.PInt(createdAvatars)
        case 3 => _root_.scalapb.descriptors.PInt(availableAvatars)
        case 4 => _root_.scalapb.descriptors.PInt(maxAvatars)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = protobuf.model.packets.PacketPreviewAvatars
}

object PacketPreviewAvatars extends com.trueaccord.scalapb.GeneratedMessageCompanion[protobuf.model.packets.PacketPreviewAvatars] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[protobuf.model.packets.PacketPreviewAvatars] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): protobuf.model.packets.PacketPreviewAvatars = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    protobuf.model.packets.PacketPreviewAvatars(
      __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[protobuf.model.packets.PacketPreviewAvatar]],
      __fieldsMap.getOrElse(__fields.get(1), 0).asInstanceOf[Int],
      __fieldsMap.getOrElse(__fields.get(2), 0).asInstanceOf[Int],
      __fieldsMap.getOrElse(__fields.get(3), 0).asInstanceOf[Int]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[protobuf.model.packets.PacketPreviewAvatars] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      protobuf.model.packets.PacketPreviewAvatars(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.collection.Seq[protobuf.model.packets.PacketPreviewAvatar]]).getOrElse(_root_.scala.collection.Seq.empty),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = PacketsProto.javaDescriptor.getMessageTypes.get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = PacketsProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => __out = protobuf.model.packets.PacketPreviewAvatar
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = protobuf.model.packets.PacketPreviewAvatars(
  )
  implicit class PacketPreviewAvatarsLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, protobuf.model.packets.PacketPreviewAvatars]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, protobuf.model.packets.PacketPreviewAvatars](_l) {
    def avatars: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.scala.collection.Seq[protobuf.model.packets.PacketPreviewAvatar]] = field(_.avatars)((c_, f_) => c_.copy(avatars = f_))
    def createdAvatars: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.createdAvatars)((c_, f_) => c_.copy(createdAvatars = f_))
    def availableAvatars: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.availableAvatars)((c_, f_) => c_.copy(availableAvatars = f_))
    def maxAvatars: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.maxAvatars)((c_, f_) => c_.copy(maxAvatars = f_))
  }
  final val AVATARS_FIELD_NUMBER = 1
  final val CREATEDAVATARS_FIELD_NUMBER = 2
  final val AVAILABLEAVATARS_FIELD_NUMBER = 3
  final val MAXAVATARS_FIELD_NUMBER = 4
}
